sudo add-apt-repository ppa:c2d4u.team/c2d4u4.0+
add-apt-repository ppa:c2d4u.team/c2d4u4.0+
sudo apt update -qq
q()
q()
exit
q()
install.packages("GenomicRanges", repos = "https://cloud.r-project.org")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GenomicRanges")
library("GenomicRanges")
q()
BiocManager::install()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::valid()
BiocManager::install(c(
"curl", "fansi", "GenomicRanges", "htmltools", "httpuv", "utf8", "vctrs"
), update = TRUE, ask = FALSE, force = TRUE)
BiocManager::valid()
library(BiocManager)
BiocManager::install(ask = FALSE)
BiocManager::valid()
BiocManager::install("GenomicRanges", update = TRUE, ask = FALSE)
BiocManager::valid()
BiocManager::install("GenomicRanges", update = TRUE, ask = FALSE)
BiocManager::valid()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install()
dir.create("C:/Users/Rafi pc/R_libs")
.libPaths("C:/Users/Rafi pc/R_libs")
BiocManager::install("GenomicRanges", lib = "C:/Users/Rafi pc/R_libs", update = TRUE, ask = FALSE)
BiocManager::install()
BiocManager::available()
source("https://bioconductor.org/biocLite.R")
q()
library(trackViewer)
range_ <- c(1, 11, 89, 1198, 1486, 1493)
width_ <- c(10, 78, 1109, 288, 7)
height_ <- c(0.0, 0.03, 0.0, 0.03, 0.0)
color_ <- c('white', '#FF8833', 'white', '#FF8833', 'white')
seql <-1493
print(height_)
features <- GRanges("chr1", IRanges(range_,
width=width_,
#names=c(" ","PDB"," ","Pkinase"," ")
),
fill = color_,
height = height_)
#name(legend) <- list("PDB","Pkinase")
dataa <- read.csv("E:/lollipop_plot/data/SHROOM4_prof_file.csv")
# dataa <- read.csv("C:/Users/admin/Downloads/CHEK1diff.csv")
SNP <- c(dataa$site)
height <- c(dataa$total)
exp_condition.gr <- GRanges("chr1", IRanges(SNP, width=1, names= c(dataa$mapped_phosphosite )),
#color = sample.int(6, length(SNP), replace=TRUE),
color = c(dataa$color),
score = height)
Frequency<-   exp_condition.gr
xaxis <- append(range_, seql)
print(xaxis)
roundup <- function(x) {
return(ceiling(x / 10) * 10)
}
maxx <- roundup(max(dataa$total))
l <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
op <- as.integer(l * maxx)
#print(yaxis)
#max_value <- round(max(dataa$total),digits = -1)
#print(max_value)
#label_on_feature=TRUE
lolliplot(Frequency, features, xaxis = xaxis,yaxis = op, cex=.5)
library(trackViewer)
range_ <- c(1, 11, 89, 1198, 1486, 1493)
width_ <- c(10, 78, 1109, 288, 7)
height_ <- c(0.0, 0.03, 0.0, 0.03, 0.0)
color_ <- c('white', '#FF8833', 'white', '#FF8833', 'white')
seql <-1493
print(height_)
features <- GRanges("chr1", IRanges(range_,
width=width_,
#names=c(" ","PDB"," ","Pkinase"," ")
),
fill = color_,
height = height_)
#name(legend) <- list("PDB","Pkinase")
dataa <- read.csv("E:/lollipop_plot/data/SHROOM4_prof_file.csv")
# dataa <- read.csv("C:/Users/admin/Downloads/CHEK1diff.csv")
SNP <- c(dataa$site)
height <- c(dataa$total)
exp_condition.gr <- GRanges("chr1", IRanges(SNP, width=1, names= c(dataa$mapped_phosphosite )),
#color = sample.int(6, length(SNP), replace=TRUE),
color = c(dataa$color),
score = height)
Frequency<-   exp_condition.gr
xaxis <- append(range_, seql)
print(xaxis)
roundup <- function(x) {
return(ceiling(x / 10) * 10)
}
maxx <- roundup(max(dataa$total))
l <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
op <- as.integer(l * maxx)
#print(yaxis)
#max_value <- round(max(dataa$total),digits = -1)
#print(max_value)
#label_on_feature=TRUE
lolliplot(Frequency, features, xaxis = xaxis,yaxis = op, cex=.5)
library(trackViewer)
range_ <- c(1, 11, 89, 1198, 1486, 1493)
width_ <- c(10, 78, 1109, 288, 7)
height_ <- c(0.0, 0.03, 0.0, 0.03, 0.0)
color_ <- c('white', '#FF8833', 'white', '#FF8833', 'white')
seql <-1493
print(height_)
features <- GRanges("chr1", IRanges(range_,width=width_,
#names=c(" ","PDB"," ","Pkinase"," ")
),
fill = color_,
height = height_)
#name(legend) <- list("PDB","Pkinase")
#dataa <- read.csv("D:/LOLLIPOP_NEW/LOLLIPOP_NEW/MAST2differ.csv")
dataa <- read.csv("E:/lollipop_plot/data/SHROOM4_differ_file.csv")
SNP <- c(dataa$site)
height <- c(dataa$total)
exp_condition.gr <- GRanges("chr1", IRanges(SNP, width=1,names= c(dataa$mapped_phosphosite ) ),
#color = sample.int(6, length(SNP), replace=TRUE),
color = c(dataa$color),
score = height)
exp_condition.gr$SNPsideID <-dataa$SNPsideID
Frequency <-   exp_condition.gr
xaxis <- append(range_, seql)
roundup <- function(x) {
return(ceiling(x / 10) * 10)
}
maxx <- roundup(max(dataa$total))
l <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
op <- as.integer(l * maxx)
lolliplot(Frequency, features, xaxis = xaxis,yaxis = op, cex=.5)
library(trackViewer)
range_ <- c(1, 11, 89, 1198, 1486, 1493)
width_ <- c(10, 78, 1109, 288, 7)
height_ <- c(0.0, 0.03, 0.0, 0.03, 0.0)
color_ <- c('white', '#FF8833', 'white', '#FF8833', 'white')
seql <-1493
print(height_)
features <- GRanges("chr1", IRanges(range_,
width=width_,
#names=c(" ","PDB"," ","Pkinase"," ")
),
fill = color_,
height = height_)
#name(legend) <- list("PDB","Pkinase")
dataa <- read.csv("E:/lollipop_plot/data/SHROOM4_prof_file.csv")
# dataa <- read.csv("C:/Users/admin/Downloads/CHEK1diff.csv")
SNP <- c(dataa$site)
height <- c(dataa$total)
exp_condition.gr <- GRanges("chr1", IRanges(SNP, width=1, names= c(dataa$mapped_phosphosite )),
#color = sample.int(6, length(SNP), replace=TRUE),
color = c(dataa$color),
score = height)
Frequency<-   exp_condition.gr
xaxis <- append(range_, seql)
print(xaxis)
roundup <- function(x) {
return(ceiling(x / 10) * 10)
}
maxx <- roundup(max(dataa$total))
l <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
op <- as.integer(l * maxx)
#print(yaxis)
#max_value <- round(max(dataa$total),digits = -1)
#print(max_value)
#label_on_feature=TRUE
lolliplot(Frequency, features, xaxis = xaxis,yaxis = op, cex=.5)
library(trackViewer)
range_ <- c(1, 28, 107, 884, 1066, 1670, 1956, 1996)
width_ <- c(27, 79, 777, 182, 604, 286, 40)
height_ <- c(0.0, 0.03, 0.0, 0.03, 0.0, 0.03, 0.0)
color_ <- c('white', '#FF8833', 'white', '#FF8833', 'white', '#FF8833', 'white')
seql <-1996
print(height_)
features <- GRanges("chr1", IRanges(range_,width=width_,
#names=c(" ","PDB"," ","Pkinase"," ")
),
fill = color_,
height = height_)
#name(legend) <- list("PDB","Pkinase")
#dataa <- read.csv("D:/LOLLIPOP_NEW/LOLLIPOP_NEW/MAST2differ.csv")
dataa <- read.csv("E:/lollipop_plot/data/SHROOM3_differ_file.csv")
SNP <- c(dataa$site)
height <- c(dataa$total)
exp_condition.gr <- GRanges("chr1", IRanges(SNP, width=1,names= c(dataa$mapped_phosphosite ) ),
#color = sample.int(6, length(SNP), replace=TRUE),
color = c(dataa$color),
score = height)
exp_condition.gr$SNPsideID <-dataa$SNPsideID
Frequency <-   exp_condition.gr
xaxis <- append(range_, seql)
roundup <- function(x) {
return(ceiling(x / 10) * 10)
}
maxx <- roundup(max(dataa$total))
l <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
op <- as.integer(l * maxx)
lolliplot(Frequency, features, xaxis = xaxis,yaxis = op, cex=.5)
library(trackViewer)
range_ <- c(1, 28, 107, 884, 1066, 1670, 1956, 1996)
width_ <- c(27, 79, 777, 182, 604, 286, 40)
height_ <- c(0.0, 0.03, 0.0, 0.03, 0.0, 0.03, 0.0)
color_ <- c('white', '#FF8833', 'white', '#FF8833', 'white', '#FF8833', 'white')
seql <-1996
print(height_)
features <- GRanges("chr1", IRanges(range_,
width=width_,
#names=c(" ","PDB"," ","Pkinase"," ")
),
fill = color_,
height = height_)
#name(legend) <- list("PDB","Pkinase")
dataa <- read.csv("E:/lollipop_plot/data/SHROOM3_prof_file.csv")
# dataa <- read.csv("C:/Users/admin/Downloads/CHEK1diff.csv")
SNP <- c(dataa$site)
height <- c(dataa$total)
exp_condition.gr <- GRanges("chr1", IRanges(SNP, width=1, names= c(dataa$mapped_phosphosite )),
#color = sample.int(6, length(SNP), replace=TRUE),
color = c(dataa$color),
score = height)
Frequency<-   exp_condition.gr
xaxis <- append(range_, seql)
print(xaxis)
roundup <- function(x) {
return(ceiling(x / 10) * 10)
}
maxx <- roundup(max(dataa$total))
l <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
op <- as.integer(l * maxx)
#print(yaxis)
#max_value <- round(max(dataa$total),digits = -1)
#print(max_value)
#label_on_feature=TRUE
lolliplot(Frequency, features, xaxis = xaxis,yaxis = op, cex=.5)
library(trackViewer)
range_ <- c(1, 117, 252, 544, 824, 852)
width_ <- c(116, 135, 292, 280, 28)
height_ <- c(0.0, 0.03, 0.0, 0.03, 0.0)
color_ <- c('white', '#FF8833', 'white', '#FF8833', 'white')
seql <-852
print(height_)
features <- GRanges("chr1", IRanges(range_,
width=width_,
#names=c(" ","PDB"," ","Pkinase"," ")
),
fill = color_,
height = height_)
#name(legend) <- list("PDB","Pkinase")
dataa <- read.csv("E:/lollipop_plot/data/SHROOM1_prof_file.csv")
# dataa <- read.csv("C:/Users/admin/Downloads/CHEK1diff.csv")
SNP <- c(dataa$site)
height <- c(dataa$total)
exp_condition.gr <- GRanges("chr1", IRanges(SNP, width=1, names= c(dataa$mapped_phosphosite )),
#color = sample.int(6, length(SNP), replace=TRUE),
color = c(dataa$color),
score = height)
Frequency<-   exp_condition.gr
xaxis <- append(range_, seql)
print(xaxis)
roundup <- function(x) {
return(ceiling(x / 10) * 10)
}
maxx <- roundup(max(dataa$total))
l <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
op <- as.integer(l * maxx)
#print(yaxis)
#max_value <- round(max(dataa$total),digits = -1)
#print(max_value)
#label_on_feature=TRUE
lolliplot(Frequency, features, xaxis = xaxis,yaxis = op, cex=.5)
library(trackViewer)
range_ <- c(1, 117, 252, 544, 824, 852)
width_ <- c(116, 135, 292, 280, 28)
height_ <- c(0.0, 0.03, 0.0, 0.03, 0.0)
color_ <- c('white', '#FF8833', 'white', '#FF8833', 'white')
seql <-852
print(height_)
features <- GRanges("chr1", IRanges(range_,width=width_,
#names=c(" ","PDB"," ","Pkinase"," ")
),
fill = color_,
height = height_)
#name(legend) <- list("PDB","Pkinase")
#dataa <- read.csv("D:/LOLLIPOP_NEW/LOLLIPOP_NEW/MAST2differ.csv")
dataa <- read.csv("E:/lollipop_plot/data/SHROOM1_differ_file.csv")
SNP <- c(dataa$site)
height <- c(dataa$total)
exp_condition.gr <- GRanges("chr1", IRanges(SNP, width=1,names= c(dataa$mapped_phosphosite ) ),
#color = sample.int(6, length(SNP), replace=TRUE),
color = c(dataa$color),
score = height)
exp_condition.gr$SNPsideID <-dataa$SNPsideID
Frequency <-   exp_condition.gr
xaxis <- append(range_, seql)
roundup <- function(x) {
return(ceiling(x / 10) * 10)
}
maxx <- roundup(max(dataa$total))
l <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
op <- as.integer(l * maxx)
lolliplot(Frequency, features, xaxis = xaxis,yaxis = op, cex=.5)
plumber::plumb(file='plumber.R')$run()
plumber::plumb(file='plumber.R')$run()
install.packages("aws.s3")
plumber::plumb(file='plumber.R')$run()
